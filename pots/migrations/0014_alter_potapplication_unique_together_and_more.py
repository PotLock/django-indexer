# Generated by Django 5.0.6 on 2024-09-18 23:05

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0006_alter_account_near_social_profile_data"),
        ("grantpicks", "0001_initial"),
        ("pots", "0013_potpayoutchallenge_tx_hash"),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name="potapplication",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="potapplication",
            name="project",
            field=models.ForeignKey(
                blank=True,
                help_text="Project that applied.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="applications",
                to="grantpicks.project",
            ),
        ),
        migrations.AddField(
            model_name="potapplication",
            name="round",
            field=models.ForeignKey(
                blank=True,
                help_text="Round applied to.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="applications",
                to="grantpicks.round",
            ),
        ),
        migrations.AlterField(
            model_name="potapplication",
            name="applicant",
            field=models.ForeignKey(
                help_text="Account that applied to the pot or round.",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pot_applications",
                to="accounts.account",
            ),
        ),
        migrations.AlterField(
            model_name="potapplication",
            name="pot",
            field=models.ForeignKey(
                blank=True,
                help_text="Pot applied to.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="applications",
                to="pots.pot",
            ),
        ),
        migrations.AlterField(
            model_name="potapplication",
            name="status",
            field=models.CharField(
                choices=[
                    ("Pending", "Pending"),
                    ("Approved", "Approved"),
                    ("Rejected", "Rejected"),
                    ("InReview", "InReview"),
                    ("Blacklisted", "Blacklisted"),
                ],
                help_text="Application status.",
                max_length=32,
                verbose_name="status",
            ),
        ),
        migrations.AlterField(
            model_name="potapplicationreview",
            name="status",
            field=models.CharField(
                choices=[
                    ("Pending", "Pending"),
                    ("Approved", "Approved"),
                    ("Rejected", "Rejected"),
                    ("InReview", "InReview"),
                    ("Blacklisted", "Blacklisted"),
                ],
                help_text="Application status for this review.",
                max_length=32,
                verbose_name="status",
            ),
        ),
        migrations.AddConstraint(
            model_name="potapplication",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("pot__isnull", False), ("round__isnull", True)),
                    models.Q(("pot__isnull", True), ("round__isnull", False)),
                    _connector="OR",
                ),
                name="pot_or_round",
            ),
        ),
    ]
