# Generated by Django 5.0.4 on 2024-04-12 16:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="List",
            fields=[
                (
                    "id",
                    models.PositiveIntegerField(
                        help_text="List id.",
                        primary_key=True,
                        serialize=False,
                        verbose_name="list id",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="List name.", max_length=64, verbose_name="name"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="List description.",
                        max_length=256,
                        null=True,
                        verbose_name="description",
                    ),
                ),
                (
                    "cover_image_url",
                    models.URLField(
                        help_text="Cover image url.",
                        null=True,
                        verbose_name="cover image url",
                    ),
                ),
                (
                    "admin_only_registrations",
                    models.BooleanField(
                        help_text="Admin only registrations.",
                        verbose_name="admin only registrations",
                    ),
                ),
                (
                    "default_registration_status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Approved", "Approved"),
                            ("Rejected", "Rejected"),
                            ("Graylisted", "Graylisted"),
                            ("Blacklisted", "Blacklisted"),
                        ],
                        help_text="Default registration status.",
                        max_length=32,
                        verbose_name="default registration status",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        help_text="List creation date.", verbose_name="created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        help_text="List last update date.", verbose_name="updated at"
                    ),
                ),
                (
                    "admins",
                    models.ManyToManyField(
                        help_text="List admins.",
                        related_name="admin_lists",
                        to="accounts.account",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="List owner.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lists",
                        to="accounts.account",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ListRegistration",
            fields=[
                (
                    "id",
                    models.AutoField(
                        help_text="Registration id.",
                        primary_key=True,
                        serialize=False,
                        verbose_name="registration id",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Approved", "Approved"),
                            ("Rejected", "Rejected"),
                            ("Graylisted", "Graylisted"),
                            ("Blacklisted", "Blacklisted"),
                        ],
                        db_index=True,
                        help_text="Registration status.",
                        max_length=32,
                        verbose_name="registration status",
                    ),
                ),
                (
                    "submitted_at",
                    models.DateTimeField(
                        help_text="Registration submission date.",
                        verbose_name="submitted at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        help_text="Registration last update date.",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "registrant_notes",
                    models.TextField(
                        help_text="Registrant notes.",
                        max_length=1024,
                        null=True,
                        verbose_name="registrant notes",
                    ),
                ),
                (
                    "admin_notes",
                    models.TextField(
                        help_text="Admin notes.",
                        max_length=1024,
                        null=True,
                        verbose_name="admin notes",
                    ),
                ),
                (
                    "tx_hash",
                    models.CharField(
                        help_text="Transaction hash.",
                        max_length=64,
                        null=True,
                        verbose_name="transaction hash",
                    ),
                ),
                (
                    "list",
                    models.ForeignKey(
                        help_text="List registered.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registrations",
                        to="lists.list",
                    ),
                ),
                (
                    "registered_by",
                    models.ForeignKey(
                        help_text="Account that did the registration.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="list_registrars",
                        to="accounts.account",
                    ),
                ),
                (
                    "registrant",
                    models.ForeignKey(
                        help_text="Account that registered on the list.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="list_registrations",
                        to="accounts.account",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ListUpvote",
            fields=[
                (
                    "id",
                    models.AutoField(
                        help_text="Upvote id.",
                        primary_key=True,
                        serialize=False,
                        verbose_name="upvote id",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        help_text="Upvote creation date.", verbose_name="created at"
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        help_text="Account that upvoted the list.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="upvoted_lists",
                        to="accounts.account",
                    ),
                ),
                (
                    "list",
                    models.ForeignKey(
                        help_text="List upvoted.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="upvotes",
                        to="lists.list",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="list",
            index=models.Index(
                fields=["created_at", "updated_at"], name="idx_list_stamps"
            ),
        ),
        migrations.AddIndex(
            model_name="listregistration",
            index=models.Index(fields=["id", "status"], name="idx_list_id_status"),
        ),
    ]
